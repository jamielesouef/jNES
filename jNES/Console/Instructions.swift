

import Foundation

struct Instruction {
  let name: String
  let cycles: UInt8
  let bytes: UInt8
  let fn: () -> Void
}

extension CPU {
  func getInstructions(forOpcode opcode: UInt8) ->Instruction {
    
    let table: [UInt8: Instruction] = [
      0x61: Instruction(name: "ADC", cycles: 6, bytes: 2, fn: { self.ADC(mode: .indirectX) }),
      0x65: Instruction(name: "ADC", cycles: 3, bytes: 2, fn: { self.ADC(mode: .zeroPage) }),
      0x69: Instruction(name: "ADC", cycles: 2, bytes: 2, fn: { self.ADC(mode: .immediate) }),
      0x6D: Instruction(name: "ADC", cycles: 4, bytes: 3, fn: { self.ADC(mode: .absolute) }),
      0x71: Instruction(name: "ADC", cycles: 5, bytes: 2, fn: { self.ADC(mode: .indirectY) }),
      0x75: Instruction(name: "ADC", cycles: 4, bytes: 2, fn: { self.ADC(mode: .zeroPageX) }),
      0x79: Instruction(name: "ADC", cycles: 4, bytes: 3, fn: { self.ADC(mode: .absoluteY) }),
      0x7D: Instruction(name: "ADC", cycles: 4, bytes: 3, fn: { self.ADC(mode: .absoluteX) }),
      0x21: Instruction(name: "AND", cycles: 6, bytes: 2, fn: { self.AND(mode: .indirectX) }),
      0x25: Instruction(name: "AND", cycles: 3, bytes: 2, fn: { self.AND(mode: .zeroPage) }),
      0x29: Instruction(name: "AND", cycles: 2, bytes: 2, fn: { self.AND(mode: .immediate) }),
      0x2D: Instruction(name: "AND", cycles: 4, bytes: 3, fn: { self.AND(mode: .absolute) }),
      0x31: Instruction(name: "AND", cycles: 5, bytes: 2, fn: { self.AND(mode: .indirectY) }),
      0x35: Instruction(name: "AND", cycles: 4, bytes: 2, fn: { self.AND(mode: .zeroPageX) }),
      0x39: Instruction(name: "AND", cycles: 4, bytes: 3, fn: { self.AND(mode: .absoluteY) }),
      0x3D: Instruction(name: "AND", cycles: 4, bytes: 3, fn: { self.AND(mode: .absoluteX) }),
      0x06: Instruction(name: "ASL", cycles: 5, bytes: 2, fn: { self.ASL(mode: .zeroPage)}),
      0x0A: Instruction(name: "ASL", cycles: 2, bytes: 1, fn:{ self.ASL(mode: .accumulator)}),
      0x0E: Instruction(name: "ASL", cycles: 6, bytes: 3, fn: { self.ASL(mode: .absolute)}),
      0x16: Instruction(name: "ASL", cycles: 6, bytes: 2, fn: { self.ASL(mode: .zeroPageX)}),
      0x1E: Instruction(name: "ASL", cycles: 7, bytes: 3, fn: { self.ASL(mode: .absoluteX)}),
      0x90: Instruction(name: "BCC", cycles: 2, bytes: 2, fn: self.BCC),
      0xB0: Instruction(name: "BCS", cycles: 2, bytes: 2, fn: self.BCS),
      0xF0: Instruction(name: "BEQ", cycles: 2, bytes: 2, fn: self.BEQ),
      0x24: Instruction(name: "BIT", cycles: 3, bytes: 2, fn: { self.BIT(mode: .zeroPage)}),
      0x2C: Instruction(name: "BIT", cycles: 4, bytes: 3, fn: { self.BIT(mode: .absolute)}),
      0x30: Instruction(name: "BMI", cycles: 2, bytes: 2, fn: self.BMI),
      0xD0: Instruction(name: "BNE", cycles: 2, bytes: 2, fn: self.BNE),
      0x10: Instruction(name: "BPL", cycles: 2, bytes: 2, fn: self.BPL),
      0x50: Instruction(name: "BVC", cycles: 2, bytes: 2, fn: self.BVC),
      0x70: Instruction(name: "BVS", cycles: 2, bytes: 2, fn: self.BVS),
      0x18: Instruction(name: "CLC", cycles: 2, bytes: 1, fn: self.CLC),
      0xD8: Instruction(name: "CLD", cycles: 2, bytes: 1, fn: self.CLD),
      0x58: Instruction(name: "CLI", cycles: 2, bytes: 1, fn: self.CLI),
      0xB8: Instruction(name: "CLV", cycles: 2, bytes: 1, fn: self.CLV),
      0xC1: Instruction(name: "CMP", cycles: 6, bytes: 2, fn: { self.CMP(mode: .indirectX)}),
      0xC5: Instruction(name: "CMP", cycles: 3, bytes: 2, fn: { self.CMP(mode: .zeroPage)}),
      0xC9: Instruction(name: "CMP", cycles: 2, bytes: 2, fn: { self.CMP(mode: .immediate)}),
      0xCD: Instruction(name: "CMP", cycles: 4, bytes: 3, fn: { self.CMP(mode: .absolute)}),
      0xD1: Instruction(name: "CMP", cycles: 5, bytes: 2, fn: { self.CMP(mode: .indirectY)}),
      0xD5: Instruction(name: "CMP", cycles: 4, bytes: 2, fn: { self.CMP(mode: .zeroPageX)}),
      0xD9: Instruction(name: "CMP", cycles: 4, bytes: 3, fn: { self.CMP(mode: .absoluteY)}),
      0xDD: Instruction(name: "CMP", cycles: 4, bytes: 3, fn: { self.CMP(mode: .absoluteX)}),
      0xE0: Instruction(name: "CPX", cycles: 2, bytes: 2, fn: { self.CPX(mode: .immediate)}),
      0xE4: Instruction(name: "CPX", cycles: 3, bytes: 2, fn: { self.CPX(mode: .zeroPage)}),
      0xEC: Instruction(name: "CPX", cycles: 4, bytes: 3, fn: { self.CPX(mode: .absolute)}),
      0xC0: Instruction(name: "CPY", cycles: 2, bytes: 2, fn: { self.CPY(mode: .immediate)}),
      0xC4: Instruction(name: "CPY", cycles: 3, bytes: 2, fn: { self.CPY(mode: .zeroPage)}),
      0xCC: Instruction(name: "CPY", cycles: 4, bytes: 3, fn: { self.CPY(mode: .absolute)}),
      0xC6: Instruction(name: "DEC", cycles: 5, bytes: 2, fn: { self.DEC(mode: .zeroPage)}),
      0xCE: Instruction(name: "DEC", cycles: 6, bytes: 3, fn: { self.DEC(mode: .absolute)}),
      0xD6: Instruction(name: "DEC", cycles: 6, bytes: 2, fn: { self.DEC(mode: .zeroPageX)}),
      0xDE: Instruction(name: "DEC", cycles: 7, bytes: 3, fn: { self.DEC(mode: .absoluteX)}),
      0xCA: Instruction(name: "DEX", cycles: 2, bytes: 1, fn: self.DEX),
      0x88: Instruction(name: "DEY", cycles: 2, bytes: 1, fn: self.DEY),
      0x41: Instruction(name: "EOR", cycles: 6, bytes: 2, fn: { self.EOR(mode: .indirectX)}),
      0x45: Instruction(name: "EOR", cycles: 3, bytes: 2, fn: { self.EOR(mode: .zeroPage)}),
      0x49: Instruction(name: "EOR", cycles: 2, bytes: 2, fn: { self.EOR(mode: .immediate)}),
      0x4D: Instruction(name: "EOR", cycles: 4, bytes: 3, fn: { self.EOR(mode: .absolute)}),
      0x51: Instruction(name: "EOR", cycles: 5, bytes: 2, fn: { self.EOR(mode: .indirectY)}),
      0x55: Instruction(name: "EOR", cycles: 4, bytes: 2, fn: { self.EOR(mode: .zeroPageX)}),
      0x59: Instruction(name: "EOR", cycles: 4, bytes: 3, fn: { self.EOR(mode: .absoluteY)}),
      0x5D: Instruction(name: "EOR", cycles: 4, bytes: 3, fn: { self.EOR(mode: .absoluteX)}),
      0xE6: Instruction(name: "INC", cycles: 5, bytes: 2, fn: { self.INC(mode: .zeroPage)}),
      0xEE: Instruction(name: "INC", cycles: 6, bytes: 3, fn: { self.INC(mode: .absolute)}),
      0xF6: Instruction(name: "INC", cycles: 6, bytes: 2, fn: { self.INC(mode: .zeroPageX)}),
      0xFE: Instruction(name: "INC", cycles: 7, bytes: 3, fn: { self.INC(mode: .absoluteX)}),
      0xE8: Instruction(name: "INX", cycles: 2, bytes: 1, fn: self.INX),
      0xC8: Instruction(name: "INY", cycles: 2, bytes: 1, fn: self.INY),
      0x4C: Instruction(name: "JMP", cycles: 3, bytes: 3, fn: { self.JMP(mode: .absolute)}),
      0x6C: Instruction(name: "JMP", cycles: 5, bytes: 3, fn: { self.JMP(mode: .indirect)}),
      0x20: Instruction(name: "JSR", cycles: 6, bytes: 3, fn: self.JSR),
      0xA1: Instruction(name: "LDA", cycles: 6, bytes: 2, fn: { self.LDA(mode: .indirectX)}),
      0xA5: Instruction(name: "LDA", cycles: 3, bytes: 2, fn: { self.LDA(mode: .zeroPage)}),
      0xA9: Instruction(name: "LDA", cycles: 2, bytes: 2, fn: { self.LDA(mode: .immediate)}),
      0xAD: Instruction(name: "LDA", cycles: 4, bytes: 3, fn: { self.LDA(mode: .absolute)}),
      0xB1: Instruction(name: "LDA", cycles: 5, bytes: 2, fn: { self.LDA(mode: .indirectY)}),
      0xB5: Instruction(name: "LDA", cycles: 4, bytes: 2, fn: { self.LDA(mode: .zeroPageX)}),
      0xB9: Instruction(name: "LDA", cycles: 4, bytes: 3, fn: { self.LDA(mode: .absoluteY)}),
      0xBD: Instruction(name: "LDA", cycles: 4, bytes: 3, fn: { self.LDA(mode: .absoluteX)}),
      0xA2: Instruction(name: "LDX", cycles: 2, bytes: 2, fn: { self.LDX(mode: .immediate)}),
      0xA6: Instruction(name: "LDX", cycles: 3, bytes: 2, fn: { self.LDX(mode: .zeroPage)}),
      0xAE: Instruction(name: "LDX", cycles: 4, bytes: 3, fn: { self.LDX(mode: .absolute)}),
      0xB6: Instruction(name: "LDX", cycles: 4, bytes: 2, fn: { self.LDX(mode: .zeroPageY)}),
      0xBE: Instruction(name: "LDX", cycles: 4, bytes: 3, fn: { self.LDX(mode: .absoluteY)}),
      0xA0: Instruction(name: "LDY", cycles: 2, bytes: 2, fn: { self.LDY(mode: .immediate)}),
      0xA4: Instruction(name: "LDY", cycles: 3, bytes: 2, fn: { self.LDY(mode: .zeroPage)}),
      0xAC: Instruction(name: "LDY", cycles: 4, bytes: 3, fn: { self.LDY(mode: .absolute)}),
      0xB4: Instruction(name: "LDY", cycles: 4, bytes: 2, fn: { self.LDY(mode: .zeroPageX)}),
      0xBC: Instruction(name: "LDY", cycles: 4, bytes: 3, fn: { self.LDY(mode: .absoluteX)}),
      0x46: Instruction(name: "LSR", cycles: 5, bytes: 2, fn: { self.LSR(mode: .zeroPage)}),
      0x4A: Instruction(name: "LSR", cycles: 2, bytes: 1, fn: { self.LSR(mode: .accumulator) }),
      0x4E: Instruction(name: "LSR", cycles: 6, bytes: 3, fn: { self.LSR(mode: .absolute)}),
      0x56: Instruction(name: "LSR", cycles: 6, bytes: 2, fn: { self.LSR(mode: .zeroPageX)}),
      0x5E: Instruction(name: "LSR", cycles: 7, bytes: 3, fn: { self.LSR(mode: .absoluteX)}),
      0xEA: Instruction(name: "NOP", cycles: 2, bytes: 1, fn: self.NOP),
      0x01: Instruction(name: "ORA", cycles: 6, bytes: 2, fn: { self.ORA(mode: .indirectX)}),
      0x05: Instruction(name: "ORA", cycles: 3, bytes: 2, fn: { self.ORA(mode: .zeroPage)}),
      0x09: Instruction(name: "ORA", cycles: 2, bytes: 2, fn: { self.ORA(mode: .immediate)}),
      0x0D: Instruction(name: "ORA", cycles: 4, bytes: 3, fn: { self.ORA(mode: .absolute)}),
      0x11: Instruction(name: "ORA", cycles: 5, bytes: 2, fn: { self.ORA(mode: .indirectY)}),
      0x15: Instruction(name: "ORA", cycles: 4, bytes: 2, fn: { self.ORA(mode: .zeroPageX)}),
      0x19: Instruction(name: "ORA", cycles: 4, bytes: 3, fn: { self.ORA(mode: .absoluteY)}),
      0x1D: Instruction(name: "ORA", cycles: 4, bytes: 3, fn: { self.ORA(mode: .absoluteX)}),
      0x48: Instruction(name: "PHA", cycles: 3, bytes: 1, fn: self.PHA),
      0x08: Instruction(name: "PHP", cycles: 3, bytes: 1, fn: self.PHP),
      0x68: Instruction(name: "PLA", cycles: 4, bytes: 1, fn: self.PLA),
      0x28: Instruction(name: "PLP", cycles: 4, bytes: 1, fn: self.PLP),
      0x26: Instruction(name: "ROL", cycles: 5, bytes: 2, fn: { self.ROL(mode: .zeroPage)}),
      0x2A: Instruction(name: "ROL", cycles: 2, bytes: 1, fn: { self.ROL(mode: .accumulator)}),
      0x2E: Instruction(name: "ROL", cycles: 6, bytes: 3, fn: { self.ROL(mode: .absolute)}),
      0x36: Instruction(name: "ROL", cycles: 6, bytes: 2, fn: { self.ROL(mode: .zeroPageX)}),
      0x3E: Instruction(name: "ROL", cycles: 7, bytes: 3, fn: { self.ROL(mode: .absoluteX)}),
      0x66: Instruction(name: "ROR", cycles: 5, bytes: 2, fn: { self.ROR(mode: .zeroPage)}),
      0x6A: Instruction(name: "ROR", cycles: 2, bytes: 1, fn: { self.ROR(mode: .accumulator)}),
      0x6E: Instruction(name: "ROR", cycles: 6, bytes: 3, fn: { self.ROR(mode: .absolute)}),
      0x76: Instruction(name: "ROR", cycles: 6, bytes: 2, fn: { self.ROR(mode: .zeroPageX)}),
      0x7E: Instruction(name: "ROR", cycles: 7, bytes: 3, fn: { self.ROR(mode: .absoluteX)}),
      0x40: Instruction(name: "RTI", cycles: 6, bytes: 1, fn: self.RTI),
      0x60: Instruction(name: "RTS", cycles: 6, bytes: 1, fn: self.RTS),
      0xE1: Instruction(name: "SBC", cycles: 6, bytes: 2, fn: { self.SBC(mode: .indirectX)}),
      0xE5: Instruction(name: "SBC", cycles: 3, bytes: 2, fn: { self.SBC(mode: .zeroPage)}),
      0xE9: Instruction(name: "SBC", cycles: 2, bytes: 2, fn: { self.SBC(mode: .immediate)}),
      0xED: Instruction(name: "SBC", cycles: 4, bytes: 3, fn: { self.SBC(mode: .absolute)}),
      0xF1: Instruction(name: "SBC", cycles: 5, bytes: 2, fn: { self.SBC(mode: .indirectY)}),
      0xF5: Instruction(name: "SBC", cycles: 4, bytes: 2, fn: { self.SBC(mode: .zeroPageX)}),
      0xF9: Instruction(name: "SBC", cycles: 4, bytes: 3, fn: { self.SBC(mode: .absoluteY)}),
      0xFD: Instruction(name: "SBC", cycles: 4, bytes: 3, fn: { self.SBC(mode: .absoluteX)}),
      0x38: Instruction(name: "SEC", cycles: 2, bytes: 1, fn: self.SEC),
      0xF8: Instruction(name: "SED", cycles: 2, bytes: 1, fn: self.SED),
      0x78: Instruction(name: "SEI", cycles: 2, bytes: 1, fn: self.SEI),
      
      0x85: Instruction(name: "STA", cycles: 3, bytes: 2, fn: { self.STA(mode: .zeroPage)}),
      0x95: Instruction(name: "STA", cycles: 4, bytes: 2, fn: { self.STA(mode: .zeroPageX)}),
      0x8D: Instruction(name: "STA", cycles: 4, bytes: 3, fn: { self.STA(mode: .absolute)}),
      0x9D: Instruction(name: "STA", cycles: 5, bytes: 3, fn: { self.STA(mode: .absoluteX)}),
      0x99: Instruction(name: "STA", cycles: 5, bytes: 3, fn: { self.STA(mode: .absoluteY)}),
      0x81: Instruction(name: "STA", cycles: 6, bytes: 2, fn: { self.STA(mode: .indirectX)}),
      0x91: Instruction(name: "STA", cycles: 6, bytes: 2, fn: { self.STA(mode: .indirectY)}),
      0x86: Instruction(name: "STX", cycles: 3, bytes: 2, fn: { self.STX(mode: .zeroPage)}),
      0x8E: Instruction(name: "STX", cycles: 4, bytes: 3, fn: { self.STX(mode: .absolute)}),
      0x96: Instruction(name: "STX", cycles: 4, bytes: 2, fn: { self.STX(mode: .zeroPageY)}),
      0x84: Instruction(name: "STY", cycles: 3, bytes: 2, fn: { self.STY(mode: .zeroPage)}),
      0x8C: Instruction(name: "STY", cycles: 4, bytes: 3, fn: { self.STY(mode: .absolute)}),
      0x94: Instruction(name: "STY", cycles: 4, bytes: 2, fn: { self.STY(mode: .zeroPageX)}),
      0xAA: Instruction(name: "TAX", cycles: 2, bytes: 1, fn: self.TAX),
      0xA8: Instruction(name: "TAY", cycles: 2, bytes: 1, fn: self.TAY),
      0xBA: Instruction(name: "TSX", cycles: 2, bytes: 1, fn: self.TSX),
      0x8A: Instruction(name: "TXA", cycles: 2, bytes: 1, fn: self.TXA),
      0x9A: Instruction(name: "TXS", cycles: 2, bytes: 1, fn: self.TXS),
      0x98: Instruction(name: "TYA", cycles: 2, bytes: 1, fn: self.TYA),
      0x0B: Instruction(name: "AAC", cycles: 2, bytes: 2, fn: { self.AAC(mode: .immediate)}),
      0x2B: Instruction(name: "AAC", cycles: 2, bytes: 2, fn: { self.AAC(mode: .immediate)}),
      0x87: Instruction(name: "AAX", cycles: 3, bytes: 2, fn: { self.AAX(mode: .zeroPage)}),
      0x97: Instruction(name: "AAX", cycles: 4, bytes: 2, fn: { self.AAX(mode: .zeroPageY)}),
      0x83: Instruction(name: "AAX", cycles: 6, bytes: 2, fn: { self.AAX(mode: .indirectX)}),
      0x8F: Instruction(name: "AAX", cycles: 4, bytes: 3, fn: { self.AAX(mode: .absolute)}),
      0x6B: Instruction(name: "ARR", cycles: 2, bytes: 2, fn: { self.ARR(mode: .immediate)}),
      0x4B: Instruction(name: "ASR", cycles: 2, bytes: 2, fn: { self.ASR(mode: .immediate)}),
      0xAB: Instruction(name: "ATX", cycles: 2, bytes: 2, fn: { self.ATX(mode: .immediate)}),
      0x9F: Instruction(name: "AXA", cycles: 5, bytes: 3, fn: { self.AXA(mode: .absoluteY)}),
      0x93: Instruction(name: "AXA", cycles: 6, bytes: 2, fn: { self.AXA(mode: .indirectY)}),
      0xCB: Instruction(name: "AXS", cycles: 2, bytes: 2, fn: { self.AXS(mode: .immediate)}),
      0xC7: Instruction(name: "DCP", cycles: 5, bytes: 2, fn: { self.DCP(mode: .zeroPage)}),
      0xD7: Instruction(name: "DCP", cycles: 6, bytes: 2, fn: { self.DCP(mode: .zeroPageX)}),
      0xCF: Instruction(name: "DCP", cycles: 6, bytes: 3, fn: { self.DCP(mode: .absolute)}),
      0xDF: Instruction(name: "DCP", cycles: 7, bytes: 3, fn: { self.DCP(mode: .absoluteX)}),
      0xDB: Instruction(name: "DCP", cycles: 7, bytes: 3, fn: { self.DCP(mode: .absoluteY)}),
      0xC3: Instruction(name: "DCP", cycles: 8, bytes: 2, fn: { self.DCP(mode: .indirectX)}),
      0xD3: Instruction(name: "DCP", cycles: 8, bytes: 2, fn: { self.DCP(mode: .indirectY)}),
      0x04: Instruction(name: "DOP", cycles: 3, bytes: 2, fn: { self.DOP(mode: .zeroPage)}),
      0x14: Instruction(name: "DOP", cycles: 4, bytes: 2, fn: { self.DOP(mode: .zeroPageX)}),
      0x34: Instruction(name: "DOP", cycles: 4, bytes: 2, fn: { self.DOP(mode: .zeroPageX)}),
      0x44: Instruction(name: "DOP", cycles: 3, bytes: 2, fn: { self.DOP(mode: .zeroPage)}),
      0x54: Instruction(name: "DOP", cycles: 4, bytes: 2, fn: { self.DOP(mode: .zeroPageX)}),
      0x64: Instruction(name: "DOP", cycles: 3, bytes: 2, fn: { self.DOP(mode: .zeroPage)}),
      0x74: Instruction(name: "DOP", cycles: 4, bytes: 2, fn: { self.DOP(mode: .zeroPageX)}),
      0x80: Instruction(name: "DOP", cycles: 2, bytes: 2, fn: { self.DOP(mode: .immediate)}),
      0x82: Instruction(name: "DOP", cycles: 2, bytes: 2, fn: { self.DOP(mode: .immediate)}),
      0x89: Instruction(name: "DOP", cycles: 2, bytes: 2, fn: { self.DOP(mode: .immediate)}),
      0xC2: Instruction(name: "DOP", cycles: 2, bytes: 2, fn: { self.DOP(mode: .immediate)}),
      0xD4: Instruction(name: "DOP", cycles: 4, bytes: 2, fn: { self.DOP(mode: .zeroPageX)}),
      0xE2: Instruction(name: "DOP", cycles: 2, bytes: 2, fn: { self.DOP(mode: .immediate)}),
      0xF4: Instruction(name: "DOP", cycles: 4, bytes: 2, fn: { self.DOP(mode: .zeroPageX)}),
      0xE7: Instruction(name: "ISC", cycles: 5, bytes: 2, fn: { self.ISC(mode: .zeroPage)}),
      0xF7: Instruction(name: "ISC", cycles: 6, bytes: 2, fn: { self.ISC(mode: .zeroPageX)}),
      0xEF: Instruction(name: "ISC", cycles: 6, bytes: 3, fn: { self.ISC(mode: .absolute)}),
      0xFF: Instruction(name: "ISC", cycles: 7, bytes: 3, fn: { self.ISC(mode: .absoluteX)}),
      0xFB: Instruction(name: "ISC", cycles: 7, bytes: 3, fn: { self.ISC(mode: .absoluteY)}),
      0xE3: Instruction(name: "ISC", cycles: 8, bytes: 2, fn: { self.ISC(mode: .indirectX)}),
      0xF3: Instruction(name: "ISC", cycles: 8, bytes: 2, fn: { self.ISC(mode: .indirectY)}),
      0x02: Instruction(name: "KIL", cycles: 1, bytes: 1, fn: self.KIL),
      0x12: Instruction(name: "KIL", cycles: 1, bytes: 1, fn: self.KIL),
      0x22: Instruction(name: "KIL", cycles: 1, bytes: 1, fn: self.KIL),
      0x32: Instruction(name: "KIL", cycles: 1, bytes: 1, fn: self.KIL),
      0x42: Instruction(name: "KIL", cycles: 1, bytes: 1, fn: self.KIL),
      0x52: Instruction(name: "KIL", cycles: 1, bytes: 1, fn: self.KIL),
      0x62: Instruction(name: "KIL", cycles: 1, bytes: 1, fn: self.KIL),
      0x72: Instruction(name: "KIL", cycles: 1, bytes: 1, fn: self.KIL),
      0x92: Instruction(name: "KIL", cycles: 1, bytes: 1, fn: self.KIL),
      0xB2: Instruction(name: "KIL", cycles: 1, bytes: 1, fn: self.KIL),
      0xD2: Instruction(name: "KIL", cycles: 1, bytes: 1, fn: self.KIL),
      0xBB: Instruction(name: "LAR", cycles: 4, bytes: 3, fn: { self.LAR(mode: .absoluteY)}),
      0xA7: Instruction(name: "LAX", cycles: 3, bytes: 2, fn: { self.LAX(mode: .zeroPage)}),
      0xB7: Instruction(name: "LAX", cycles: 4, bytes: 2, fn: { self.LAX(mode: .zeroPageY)}),
      0xAF: Instruction(name: "LAX", cycles: 4, bytes: 3, fn: { self.LAX(mode: .absolute)}),
      0xBF: Instruction(name: "LAX", cycles: 4, bytes: 3, fn: { self.LAX(mode: .absoluteY)}),
      0xA3: Instruction(name: "LAX", cycles: 6, bytes: 2, fn: { self.LAX(mode: .indirectX)}),
      0xB3: Instruction(name: "LAX", cycles: 5, bytes: 2, fn: { self.LAX(mode: .indirectY)}),
      0x1A: Instruction(name: "NOP", cycles: 2, bytes: 1, fn: self.NOP),
      0x3A: Instruction(name: "NOP", cycles: 2, bytes: 1, fn: self.NOP),
      0x5A: Instruction(name: "NOP", cycles: 2, bytes: 1, fn: self.NOP),
      0x7A: Instruction(name: "NOP", cycles: 2, bytes: 1, fn: self.NOP),
      0xDA: Instruction(name: "NOP", cycles: 2, bytes: 1, fn: self.NOP),
      0xFA: Instruction(name: "NOP", cycles: 2, bytes: 1, fn: self.NOP),
      0x27: Instruction(name: "RLA", cycles: 5, bytes: 2, fn: { self.RLA(mode: .zeroPage)}),
      0x37: Instruction(name: "RLA", cycles: 6, bytes: 2, fn: { self.RLA(mode: .zeroPageX)}),
      0x2F: Instruction(name: "RLA", cycles: 6, bytes: 3, fn: { self.RLA(mode: .absolute)}),
      0x3F: Instruction(name: "RLA", cycles: 7, bytes: 3, fn: { self.RLA(mode: .absoluteX)}),
      0x3B: Instruction(name: "RLA", cycles: 7, bytes: 3, fn: { self.RLA(mode: .absoluteY)}),
      0x23: Instruction(name: "RLA", cycles: 8, bytes: 2, fn: { self.RLA(mode: .indirectX)}),
      0x33: Instruction(name: "RLA", cycles: 8, bytes: 2, fn: { self.RLA(mode: .indirectY)}),
      0x67: Instruction(name: "RRA", cycles: 5, bytes: 2, fn: { self.RRA(mode: .zeroPage)}),
      0x77: Instruction(name: "RRA", cycles: 6, bytes: 2, fn: { self.RRA(mode: .zeroPageX)}),
      0x6F: Instruction(name: "RRA", cycles: 6, bytes: 3, fn: { self.RRA(mode: .absolute)}),
      0x7F: Instruction(name: "RRA", cycles: 7, bytes: 3, fn: { self.RRA(mode: .absoluteX)}),
      0x7B: Instruction(name: "RRA", cycles: 7, bytes: 3, fn: { self.RRA(mode: .absoluteY)}),
      0x63: Instruction(name: "RRA", cycles: 8, bytes: 2, fn: { self.RRA(mode: .indirectX)}),
      0x73: Instruction(name: "RRA", cycles: 8, bytes: 2, fn: { self.RRA(mode: .indirectY)}),
      0xEB: Instruction(name: "SBC", cycles: 2, bytes: 2, fn: { self.SBC(mode: .immediate)}),
      0x07: Instruction(name: "SLO", cycles: 5, bytes: 2, fn: { self.SLO(mode: .zeroPage)}),
      0x17: Instruction(name: "SLO", cycles: 6, bytes: 2, fn: { self.SLO(mode: .zeroPageX)}),
      0x0F: Instruction(name: "SLO", cycles: 6, bytes: 3, fn: { self.SLO(mode: .absolute)}),
      0x1F: Instruction(name: "SLO", cycles: 7, bytes: 3, fn: { self.SLO(mode: .absoluteX)}),
      0x1B: Instruction(name: "SLO", cycles: 7, bytes: 3, fn: { self.SLO(mode: .absoluteY)}),
      0x03: Instruction(name: "SLO", cycles: 8, bytes: 2, fn: { self.SLO(mode: .indirectX)}),
      0x13: Instruction(name: "SLO", cycles: 8, bytes: 2, fn: { self.SLO(mode: .indirectY)}),
      0x47: Instruction(name: "SRE", cycles: 5, bytes: 2, fn: { self.SRE(mode: .zeroPage)}),
      0x57: Instruction(name: "SRE", cycles: 6, bytes: 2, fn: { self.SRE(mode: .zeroPageX)}),
      0x4F: Instruction(name: "SRE", cycles: 6, bytes: 3, fn: { self.SRE(mode: .absolute)}),
      0x5F: Instruction(name: "SRE", cycles: 7, bytes: 3, fn: { self.SRE(mode: .absoluteX)}),
      0x5B: Instruction(name: "SRE", cycles: 7, bytes: 3, fn: { self.SRE(mode: .absoluteY)}),
      0x43: Instruction(name: "SRE", cycles: 8, bytes: 2, fn: { self.SRE(mode: .indirectX)}),
      0x53: Instruction(name: "SRE", cycles: 8, bytes: 2, fn: { self.SRE(mode: .indirectY)}),
      0x9E: Instruction(name: "SXA", cycles: 5, bytes: 3, fn: { self.SXA(mode: .absoluteY)}),
      0x9C: Instruction(name: "SYA", cycles: 5, bytes: 3, fn: { self.SYA(mode: .absoluteX)}),
      0x0C: Instruction(name: "TOP", cycles: 4, bytes: 3, fn: { self.TOP(mode: .absolute)}),
      0x1C: Instruction(name: "TOP", cycles: 4, bytes: 3, fn: { self.TOP(mode: .absoluteX)}),
      0x3C: Instruction(name: "TOP", cycles: 4, bytes: 3, fn: { self.TOP(mode: .absoluteX)}),
      0x5C: Instruction(name: "TOP", cycles: 4, bytes: 3, fn: { self.TOP(mode: .absoluteX)}),
      0x7C: Instruction(name: "TOP", cycles: 4, bytes: 3, fn: { self.TOP(mode: .absoluteX)}),
      0xDC: Instruction(name: "TOP", cycles: 4, bytes: 3, fn: { self.TOP(mode: .absoluteX)}),
      0xFC: Instruction(name: "TOP", cycles: 4, bytes: 3, fn: { self.TOP(mode: .absoluteX)}),
      0x8B: Instruction(name: "XAA", cycles: 2, bytes: 2, fn: { self.XAA(mode: .immediate)}),
    ]
    
    guard let instruction = table[opcode] else {
      let code = String(opcode, radix: 16)
      fatalError("Unknown opcode: \(code)")
    }
    
    return instruction
  }
}
